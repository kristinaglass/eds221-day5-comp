---
title: "Testing Functions"
format: html
editor: visual
---

```{r}
library(testthat)
library(devtools)
library(remotes)
```

## Write a function

```{r}
mean_range <- function(df) {
  col_means <- apply(X = df, MARGIN = 2, FUN = mean, na.rm = TRUE)
  col_mean_max <- max(col_means)
  col_mean_min <- min(col_means)
  return(c(col_mean_min, col_mean_max))
}
```

```{r}
mean_range(mtcars)
```

```{r}
mean_range(faithful)
```

## Write unit test using testthat()

```{r}
expect_length(mean_range(mtcars), 6)
```

```{r}
expect_length(mean_range(mtcars), 2)
## if no error shows that means it passes
```

```{r}
expect_type(mean_range(mtcars), "double")
```

```{r}
expect_true(mean_range(mtcars)[2] <= mean_range(mtcars)[1])
```

```{r}
expect_true(mean_range(mtcars)[1] <= mean_range(mtcars)[2])
```

```{r}
source("name_cart.R")
## If file is not in main working directory, you can call to it with the here::here function
```

```{r}
source(here::here("src", "name_cart.R"))
```

```{r}
name_cart(food = "enchilada", animal = "hawk")
```

```{r}
source(here::here("src", "cork_oak_growth.R"))
```

```{r}
height_t2(height_t1 = 20, t1 = 4, t2 = 19)
```
